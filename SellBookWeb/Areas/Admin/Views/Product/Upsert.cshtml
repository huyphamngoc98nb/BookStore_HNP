@using SellBook.Models.Models
@model ProductVM

<form method="post" class="row" enctype="multipart/form-data">
    <input asp-for="Product.Id" hidden />
    <input asp-for="Product.ImageUrl" hidden />
    <div class="row border p-3 my-4">
        <div class="row pb-2">
            <h2 class="text-primary" style="text-align:center">@(Model.Product.Id == null || Model.Product.Id.Equals(Guid.Empty) ? "Create" : "Update") Product</h2>
            <hr />
        </div>

        <div class="col-10">

            @*         <div asp-validation-summary="All"></div>
            *@
            <div class="mb-3 row p-1">
                <label asp-for="Product.Title" class="p-0"></label>
                <input class="form-control" asp-for="Product.Title" />
                <span asp-validation-for="Product.Title" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.Author class="p-0"></label>
                <input class="form-control" asp-for="Product.Author" />
                <span asp-validation-for="Product.Author" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.Description class="p-0"></label>
                <textarea rows="2" class="form-control" asp-for="Product.Description"></textarea>
                @*             <span asp-validation-for="Product.Description" class="text-danger"></span>
                *@
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.ISBN class="p-0"></label>
                <input class="form-control" asp-for="Product.ISBN" />
                @*             <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                *@
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.ListPrice class="p-0"></label>
                <input class="form-control" asp-for="Product.ListPrice" />
                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.Price class="p-0"></label>
                <input class="form-control" asp-for="Product.Price" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.Price50 class="p-0"></label>
                <input class="form-control" asp-for="Product.Price50" />
                <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=Product.Price100 class="p-0"></label>
                <input class="form-control" asp-for="Product.Price100" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="mb-3 row p-1">
                <label asp-for=@Model.Product.CategoryId class="p-0"></label>
                <select asp-for="@Model.Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
                    <option disabled selected>-- Select Category --</option>
                </select>
                @*             <input class="form-control" asp-for="CategoryId" />
                *@            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>

            <div class="mb-3 row p-1">
                <label asp-for=Product.ImageUrl class="p-0"></label>
                <input type="file" name="file" class="form-control" />
            </div>

            <div class="row pt-2 pb-2">
                <div class="col-6 col-md-3">
                    @if (Model.Product.Id == null || Model.Product.Id.Equals(Guid.Empty))
                    {
                        <button type="submit" class="btn btn-primary form-control">Create</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-primary form-control">Update</button>
                    }
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="Product" asp-action="Index" class="btn btn-secondary form-control">Return to List</a>
                </div>
            </div>
        </div>

        <div class="col-2">
            <img src="@Model.Product.ImageUrl" width="100%" style="border-radius:5px; border:1px solid #bbb9b9"/>
        </div>
    </div>
</form>

@* Add client side validation*@
@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Jan 17, 2025:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown', 'importword', 'exportword', 'exportpdf'
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}