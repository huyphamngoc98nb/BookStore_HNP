// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SellBook.DataAccess.Data;

#nullable disable

namespace SellBook.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SellBook.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a110"),
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a111"),
                            DisplayOrder = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a112"),
                            DisplayOrder = 3,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a113"),
                            DisplayOrder = 4,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a114"),
                            DisplayOrder = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a115"),
                            DisplayOrder = 6,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a116"),
                            DisplayOrder = 7,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a117"),
                            DisplayOrder = 8,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a118"),
                            DisplayOrder = 9,
                            Name = "Historical"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a119"),
                            DisplayOrder = 10,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a120"),
                            DisplayOrder = 11,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a121"),
                            DisplayOrder = 12,
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a122"),
                            DisplayOrder = 13,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a123"),
                            DisplayOrder = 14,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a124"),
                            DisplayOrder = 15,
                            Name = "Art"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a125"),
                            DisplayOrder = 16,
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a126"),
                            DisplayOrder = 17,
                            Name = "Photography"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a127"),
                            DisplayOrder = 18,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a128"),
                            DisplayOrder = 19,
                            Name = "Spirituality"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a129"),
                            DisplayOrder = 20,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a130"),
                            DisplayOrder = 21,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a131"),
                            DisplayOrder = 22,
                            Name = "Comics"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a132"),
                            DisplayOrder = 23,
                            Name = "Graphic Novels"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a133"),
                            DisplayOrder = 24,
                            Name = "Children's Books"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a134"),
                            DisplayOrder = 25,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a135"),
                            DisplayOrder = 26,
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a136"),
                            DisplayOrder = 27,
                            Name = "Science"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a137"),
                            DisplayOrder = 28,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a138"),
                            DisplayOrder = 29,
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a139"),
                            DisplayOrder = 30,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a140"),
                            DisplayOrder = 31,
                            Name = "Politics"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a141"),
                            DisplayOrder = 32,
                            Name = "Economics"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a142"),
                            DisplayOrder = 33,
                            Name = "Business"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a143"),
                            DisplayOrder = 34,
                            Name = "Management"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a144"),
                            DisplayOrder = 35,
                            Name = "Law"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a145"),
                            DisplayOrder = 36,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a146"),
                            DisplayOrder = 37,
                            Name = "Anthology"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a147"),
                            DisplayOrder = 38,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a148"),
                            DisplayOrder = 39,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a149"),
                            DisplayOrder = 40,
                            Name = "Essay"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a150"),
                            DisplayOrder = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a151"),
                            DisplayOrder = 42,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a152"),
                            DisplayOrder = 43,
                            Name = "Parenting"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a153"),
                            DisplayOrder = 44,
                            Name = "Relationships"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a154"),
                            DisplayOrder = 45,
                            Name = "Gardening"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a155"),
                            DisplayOrder = 46,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a156"),
                            DisplayOrder = 47,
                            Name = "Fitness"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a157"),
                            DisplayOrder = 48,
                            Name = "Animals"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a158"),
                            DisplayOrder = 49,
                            Name = "Nature"
                        },
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a159"),
                            DisplayOrder = 50,
                            Name = "Environment"
                        });
                });

            modelBuilder.Entity("SellBook.Models.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a9b2967-bd3e-4d75-81f5-64c5e191a110"),
                            Author = "Robert C. Martin",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A Handbook of Agile Software Craftsmanship focusing on writing readable and maintainable code.",
                            ISBN = "9780132350884",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = new Guid("bc3d12e4-efdd-40f3-96e4-4fcf53e6f777"),
                            Author = "Andrew Hunt, David Thomas",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Tips and techniques for software developers to improve coding and problem-solving skills.",
                            ISBN = "9780201616224",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "The Pragmatic Programmer"
                        },
                        new
                        {
                            Id = new Guid("bb97d76f-fb7b-471b-a69c-fd90d0f8a70e"),
                            Author = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Elements of Reusable Object-Oriented Software detailing classic design patterns.",
                            ISBN = "9780201633610",
                            ImageUrl = "",
                            ListPrice = 69.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "Design Patterns"
                        },
                        new
                        {
                            Id = new Guid("c2459f93-3f73-45c9-ae86-65b3cd8a4b60"),
                            Author = "Martin Fowler",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Improving the design of existing code for better maintainability.",
                            ISBN = "9780201485677",
                            ImageUrl = "",
                            ListPrice = 64.0,
                            Price = 60.0,
                            Price100 = 50.0,
                            Price50 = 55.0,
                            Title = "Refactoring"
                        },
                        new
                        {
                            Id = new Guid("d7e4d235-42a7-44ee-b2af-508e488c0bf2"),
                            Author = "Eric Freeman, Elisabeth Robson",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "An approachable guide to software design patterns with engaging visuals.",
                            ISBN = "9780596007126",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Head First Design Patterns"
                        },
                        new
                        {
                            Id = new Guid("ed32c3ad-9b36-4c6b-8612-2b2ed4d8e17e"),
                            Author = "Kyle Simpson",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A deep dive into the core mechanics of JavaScript and modern features.",
                            ISBN = "9781491904244",
                            ImageUrl = "",
                            ListPrice = 39.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            Title = "You Don't Know JS"
                        },
                        new
                        {
                            Id = new Guid("fa8dcdb8-f4f8-4042-9011-56737a69b914"),
                            Author = "Marijn Haverbeke",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A modern introduction to JavaScript, covering core programming concepts.",
                            ISBN = "9781593279509",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Eloquent JavaScript"
                        },
                        new
                        {
                            Id = new Guid("bb3b0412-d68f-4a22-a12d-56cb8d6e7325"),
                            Author = "Gayle Laakmann McDowell",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "150 programming interview questions and solutions to prepare for technical interviews.",
                            ISBN = "9780984782857",
                            ImageUrl = "",
                            ListPrice = 69.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "Cracking the Coding Interview"
                        },
                        new
                        {
                            Id = new Guid("97f70eeb-82a1-4c91-9f92-8a07bbdb33e3"),
                            Author = "Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Comprehensive guide on algorithms for computer science students and professionals.",
                            ISBN = "9780262033848",
                            ImageUrl = "",
                            ListPrice = 89.0,
                            Price = 85.0,
                            Price100 = 75.0,
                            Price50 = 80.0,
                            Title = "Introduction to Algorithms"
                        },
                        new
                        {
                            Id = new Guid("3ec7e0a2-9c2d-4e45-8eb5-60b251e64523"),
                            Author = "Steve McConnell",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A practical handbook of software construction focusing on best coding practices.",
                            ISBN = "9780735619678",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Code Complete"
                        },
                        new
                        {
                            Id = new Guid("e4534f70-2a4a-4c21-919e-cfd1d6176e75"),
                            Author = "Michael Feathers",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Techniques to improve and refactor legacy codebases effectively.",
                            ISBN = "9780131177055",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Working Effectively with Legacy Code"
                        },
                        new
                        {
                            Id = new Guid("89be1842-d30a-4010-9d53-bfdb6b892814"),
                            Author = "Donald E. Knuth",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A classic series covering algorithms and programming techniques.",
                            ISBN = "9780201896831",
                            ImageUrl = "",
                            ListPrice = 199.0,
                            Price = 190.0,
                            Price100 = 180.0,
                            Price50 = 185.0,
                            Title = "The Art of Computer Programming"
                        },
                        new
                        {
                            Id = new Guid("9e25e49f-5a3d-4d21-8b2b-711b70e413f8"),
                            Author = "Michael Sipser",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A theoretical approach to computation and algorithms.",
                            ISBN = "9781133187790",
                            ImageUrl = "",
                            ListPrice = 79.0,
                            Price = 75.0,
                            Price100 = 65.0,
                            Price50 = 70.0,
                            Title = "Introduction to the Theory of Computation"
                        },
                        new
                        {
                            Id = new Guid("244b014e-5412-4de0-8f1e-f7e23c6b0cc3"),
                            Author = "Douglas Crockford",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A concise guide to JavaScript's best features and practices.",
                            ISBN = "9780596517748",
                            ImageUrl = "",
                            ListPrice = 29.0,
                            Price = 25.0,
                            Price100 = 15.0,
                            Price50 = 20.0,
                            Title = "JavaScript: The Good Parts"
                        },
                        new
                        {
                            Id = new Guid("0a8bbf34-5827-4f88-9b2e-34e75f738d2f"),
                            Author = "Eric Evans",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Addressing complexity in software development through domain-driven design.",
                            ISBN = "9780321125217",
                            ImageUrl = "",
                            ListPrice = 69.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "Domain-Driven Design"
                        },
                        new
                        {
                            Id = new Guid("47f2b9f2-98b8-4b50-b3b1-53d6db6ccdd2"),
                            Author = "Eric Matthes",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A hands-on, project-based introduction to Python programming.",
                            ISBN = "9781593279288",
                            ImageUrl = "",
                            ListPrice = 44.0,
                            Price = 40.0,
                            Price100 = 30.0,
                            Price50 = 35.0,
                            Title = "Python Crash Course"
                        },
                        new
                        {
                            Id = new Guid("a15cb537-c97e-4c2e-bf10-159d7b3a191d"),
                            Author = "Jon Skeet",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A comprehensive guide to mastering C# features and techniques.",
                            ISBN = "9781617294532",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "C# in Depth"
                        },
                        new
                        {
                            Id = new Guid("84d3d527-7052-4e27-8713-b1d7314c2f19"),
                            Author = "Joshua Bloch",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Best practices and design principles for Java programming.",
                            ISBN = "9780134685991",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Effective Java"
                        },
                        new
                        {
                            Id = new Guid("e5b4a63a-366e-47a3-8ae4-0d3171c455e3"),
                            Author = "Ian Goodfellow, Yoshua Bengio, Aaron Courville",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A comprehensive introduction to deep learning concepts and techniques.",
                            ISBN = "9780262035613",
                            ImageUrl = "",
                            ListPrice = 89.0,
                            Price = 85.0,
                            Price100 = 75.0,
                            Price50 = 80.0,
                            Title = "Deep Learning"
                        },
                        new
                        {
                            Id = new Guid("71aebec8-5a88-4c6e-a892-39ad84662d6c"),
                            Author = "Stuart Russell, Peter Norvig",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A comprehensive overview of AI principles and techniques.",
                            ISBN = "9780136042594",
                            ImageUrl = "",
                            ListPrice = 99.0,
                            Price = 95.0,
                            Price100 = 85.0,
                            Price50 = 90.0,
                            Title = "Artificial Intelligence: A Modern Approach"
                        },
                        new
                        {
                            Id = new Guid("5c2924a8-9051-4760-bc29-9ecbcf16d1f7"),
                            Author = "Kelsey Hightower, Brendan Burns, Joe Beda",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Dive into Kubernetes concepts and deploy containerized applications.",
                            ISBN = "9781491935675",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Kubernetes Up & Running"
                        },
                        new
                        {
                            Id = new Guid("6f34a8de-d194-42e7-9462-67ea5fd8577e"),
                            Author = "Niall Richard Murphy, Betsy Beyer, Chris Jones, Jennifer Petoff",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Insights into Google's approach to reliability and operational excellence.",
                            ISBN = "9781491929124",
                            ImageUrl = "",
                            ListPrice = 79.0,
                            Price = 75.0,
                            Price100 = 65.0,
                            Price50 = 70.0,
                            Title = "Site Reliability Engineering"
                        },
                        new
                        {
                            Id = new Guid("c1d5a61b-d9e2-44f3-8ed1-26851e5fc0b8"),
                            Author = "Mike Cohn",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Guidance on estimating and planning in agile software development.",
                            ISBN = "9780131479418",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Agile Estimating and Planning"
                        },
                        new
                        {
                            Id = new Guid("c8b6c11f-7b5d-4051-9c2a-e0b07c2fc47e"),
                            Author = "Kent Beck",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Introduction to test-driven development with practical examples.",
                            ISBN = "9780321146533",
                            ImageUrl = "",
                            ListPrice = 39.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            Title = "Test-Driven Development by Example"
                        },
                        new
                        {
                            Id = new Guid("5b462e1e-d7c7-47d6-a9b6-fd343cfdb8d4"),
                            Author = "Robert C. Martin",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A guide to software structure and architecture principles.",
                            ISBN = "9780134494166",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Clean Architecture"
                        },
                        new
                        {
                            Id = new Guid("89d06b93-f835-4d58-8170-8fbe3156ec27"),
                            Author = "Jez Humble, David Farley",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Reliable software releases through build, test, and deployment automation.",
                            ISBN = "9780321601919",
                            ImageUrl = "",
                            ListPrice = 59.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "Continuous Delivery"
                        },
                        new
                        {
                            Id = new Guid("62c8a7da-5f41-4ef2-8049-06415357e204"),
                            Author = "Brett Slatkin",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "59 specific ways to improve Python programs.",
                            ISBN = "9780134034287",
                            ImageUrl = "",
                            ListPrice = 44.0,
                            Price = 40.0,
                            Price100 = 30.0,
                            Price50 = 35.0,
                            Title = "Effective Python"
                        },
                        new
                        {
                            Id = new Guid("af3df834-5d0a-4629-a1b4-57dfabdd43cd"),
                            Author = "Gene Kim, Kevin Behr, George Spafford",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A novel about IT, DevOps, and helping businesses win.",
                            ISBN = "9780988262591",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "The Phoenix Project"
                        },
                        new
                        {
                            Id = new Guid("4c40c99c-e9e4-4c8b-bb8d-dfa19b9d7cb2"),
                            Author = "Alex Banks, Eve Porcello",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "A hands-on guide to building web applications using React.",
                            ISBN = "9781491954621",
                            ImageUrl = "",
                            ListPrice = 44.0,
                            Price = 40.0,
                            Price100 = 30.0,
                            Price50 = 35.0,
                            Title = "Learning React"
                        },
                        new
                        {
                            Id = new Guid("2b92dc6e-1dc7-4aaf-b21c-6825dbadfc2f"),
                            Author = "Nigel Poulton",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Learn Docker in-depth and practical use cases.",
                            ISBN = "9781521822807",
                            ImageUrl = "",
                            ListPrice = 39.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            Title = "Docker Deep Dive"
                        },
                        new
                        {
                            Id = new Guid("7d5456f5-4b0d-4ba6-80ee-b14d8d6cf3e8"),
                            Author = "Jeff Geerling",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Simple IT automation through Ansible.",
                            ISBN = "9780989551335",
                            ImageUrl = "",
                            ListPrice = 39.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            Title = "Ansible for DevOps"
                        },
                        new
                        {
                            Id = new Guid("12b53bfb-46fa-4c03-bd36-f299fc94eb5e"),
                            Author = "Jon Bentley",
                            CategoryId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Insights into coding and problem-solving techniques for software developers.",
                            ISBN = "9780201657883",
                            ImageUrl = "",
                            ListPrice = 49.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Programming Pearls"
                        });
                });

            modelBuilder.Entity("SellBook.Models.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SellBook.Models.Models.Product", b =>
                {
                    b.HasOne("SellBook.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
